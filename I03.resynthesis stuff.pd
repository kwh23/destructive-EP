#N canvas 364 121 916 655 12;
#N canvas 265 48 643 640 fft-analysis 0;
#X obj 15 164 *~;
#X obj 14 99 inlet~;
#X obj 15 218 rfft~;
#X obj 36 140 tabreceive~ \$0-hann;
#X obj 14 353 *~;
#X obj 56 353 *~;
#X text 85 88 The inlet~ now re-uses 3/4 of the previous block \, along
with the 128 new samples.;
#X text 221 141 window function as before.;
#X obj 77 225 *~;
#X obj 16 506 *~;
#X obj 37 481 tabreceive~ \$0-hann;
#X text 98 301 divide by 3N/2 (factor of N because rfft and rifft aren't
normalized \, and 3/2 is the gain of overlap-4 reconstruction when
Hann window function is applied twice.);
#X text 120 216 Just to show we're doing something \, we multiply each
channel by a gain controlled by an array in the main window. The control
is quartic-scaled for easy editing.;
#X obj 78 251 *~;
#X text 92 357 Multiply the (complex-valued) spectrum amplitudes by
the (real-valued) gain-and-normalization-factor;
#X obj 15 399 rifft~;
#X text 89 396 Real-valued inverse Fourier transform. This uses only
the first N/@ points of its inputs \, supplying the rest by symmerty
(so it's OK that rfft~ obly puts out those N/2 points.) There's only
one outlet because the output is real-valued.;
#X obj 16 566 outlet~;
#X text 88 499 Multiply by the Hann window function again \, necessary
because the operation we performed might result in a signal that doesn't
go smoothly to zero at both ends.;
#X text 89 566 This repackages the output into 64-sample chunks for
the parent window. Since we're operating with an overlap \, the outlet~
object performs an overlapped sum of the blocks computed in this window.
;
#X text 129 8 block~ object specifies vector size of 512 and overlap
four. This window now computes blocks of 512 samples at intervals of
128 samples computed on the parent patch.;
#X obj 76 196 tabreceive~ gain;
#X obj 15 8 block~ 1024 4;
#X obj 77 283 /~ 1536;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 2 0 4 0;
#X connect 2 1 5 0;
#X connect 3 0 0 1;
#X connect 4 0 15 0;
#X connect 5 0 15 1;
#X connect 8 0 13 0;
#X connect 8 0 13 1;
#X connect 9 0 17 0;
#X connect 10 0 9 1;
#X connect 13 0 23 0;
#X connect 15 0 9 0;
#X connect 21 0 8 0;
#X connect 21 0 8 1;
#X connect 23 0 4 1;
#X connect 23 0 5 1;
#X restore 26 289 pd fft-analysis;
#X text 290 362 updated for Pd version 0.39;
#N canvas 35 66 592 433 Hann-window 1;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-hann 1024 float 0;
#X coords 0 1 1023 0 200 120 1;
#X restore 293 249 graph;
#X msg 171 263 0;
#X obj 65 312 osc~;
#X obj 65 264 samplerate~;
#X obj 65 335 *~ -0.5;
#X obj 65 358 +~ 0.5;
#X obj 57 383 tabwrite~ \$0-hann;
#X text 279 241 1;
#X text 272 359 0;
#X text 288 372 0;
#X obj 57 241 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X text 336 221 Hann window;
#X text 113 310 period 512;
#X text 90 215 recalculate Hann;
#X text 125 230 window table;
#X obj 57 146 loadbang;
#X msg 79 179 \; pd dsp 1;
#X text 40 27 The Hann window is now recomputed on 'loadbang' to make
the file smaller (it doesn't have to be saved with the array.);
#X text 474 375 511;
#X obj 65 288 / 1024;
#X connect 1 0 2 1;
#X connect 2 0 4 0;
#X connect 3 0 19 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 10 0 3 0;
#X connect 10 0 1 0;
#X connect 10 0 6 0;
#X connect 15 0 10 0;
#X connect 15 0 16 0;
#X connect 19 0 2 0;
#X restore 192 318 pd Hann-window;
#X obj 27 323 output~;
#N canvas 0 22 450 300 (subpatch) 0;
#X array gain 512 float 3;
#A 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0.202 0.202 0.218833 0.218833
0.235666 0.235666 0.2525 0.269333 0.286166 0.572332 0 0 0 0 0 0 0 0.690166
0.673332 0.286166 0.269333 0.2525 0.117833 0 0 1.111 0.892165 0.757499
0.656499 0.488166 0 0.875332 0 0 0 0 0 0 0 1.01 1.01 0.942665 0.841665
0 0 0 0 0 0 0 0 0 0 0 0 0.841665 0.908998 0.101 0 0 0 0 0 0 0 0 0 0
0 0.875332 0.942665 0.959498 0.959498 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 1.02683 1.02683 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0;
#X coords 0 1 512 -0.01 512 60 1;
#X restore 45 36 graph;
#X msg 192 264 const 0;
#X text 21 80 0;
#X text 21 21 1;
#X text 34 90 0;
#X text 531 93 22K;
#X text 270 261 <- reset gain;
#X msg 34 140 open /Users/kieran/Desktop/pdstuff/Mist_form_wip.wav
;
#X obj 34 190 readsf~;
#X msg 95 163 1;
#X msg 132 165 0;
#X obj 370 143 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 364 117 t b;
#X msg 223 217 const 1;
#X obj 644 433 tabwrite \$0-gain;
#X msg 648 355 0;
#X obj 718 329 random 256;
#X obj 644 282 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 640 314 t b b;
#X obj 716 244 metro 500;
#X obj 714 220 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X floatatom 791 196 5 0 0 0 - - -;
#X obj 713 373 expr $f1 / 2 + 128;
#X floatatom 774 412 5 0 0 0 - - -;
#X msg 564 -143;
#X obj 192 293 s gain;
#X msg 590 -101 \; gain 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1;
#X text 25 12;
#N canvas 1139 262 450 300 oscbank 1;
#X restore 471 252 pd oscbank;
#X connect 0 0 3 0;
#X connect 0 0 3 1;
#X connect 5 0 29 0;
#X connect 11 0 12 0;
#X connect 12 0 0 0;
#X connect 12 1 15 0;
#X connect 13 0 12 0;
#X connect 14 0 12 0;
#X connect 14 0 16 0;
#X connect 15 0 11 0;
#X connect 16 0 15 0;
#X connect 17 0 29 0;
#X connect 19 0 18 0;
#X connect 20 0 26 0;
#X connect 21 0 22 0;
#X connect 22 0 19 0;
#X connect 22 1 20 0;
#X connect 23 0 21 0;
#X connect 24 0 23 0;
#X connect 25 0 23 1;
#X connect 26 0 18 1;
#X connect 26 0 27 0;
